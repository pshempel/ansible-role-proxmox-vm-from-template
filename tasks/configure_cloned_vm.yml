---
- name: Configure network settings and modify storage and memory for deployed VMs
  community.general.proxmox_kvm:
    api_user: "{{ proxmox_api_token_id.split('!')[0] }}"
    api_token_id: "{{ proxmox_api_token_id.split('!')[1] }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    api_host: "{{ proxmox_api_host }}"
    node: "{{ vm_target_node }}"
    vmid: "{{ clone_results.vmid }}"
    memory: "{{ vm_to_clone.memory | default(pvmt_default_memory_size) }}"
    cores: "{{ vm_to_clone.cores | default(pvmt_default_cpu_cores) }}"
    sockets: "{{ vm_to_clone.sockets | default(pvmt_default_cpu_sockets) }}"
    onboot: "{{ vm_to_clone.boot_on_start | default(pvmt_default_boot_on_start) }}"
    tags: "{{ vm_to_clone.vm_tags | default(omit)}}"
    agent: "{{ vm_to_clone.agent | default(pvmt_default_vm_agent) }}"
    update: true
  when: vm_to_clone.state | default('present') == 'present'

- name: Resize VM disk
  community.general.proxmox_disk:
    api_user: "{{ proxmox_api_token_id.split('!')[0] }}"
    api_token_id: "{{ proxmox_api_token_id.split('!')[1] }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    api_host: "{{ proxmox_api_host }}"
    vmid: "{{ clone_results.vmid }}"
    storage: "{{ vm_to_clone.disk_storage | default('iscsi0') }}"
    disk: "{{ vm_to_clone.disk | default(pvmt_default_vm_disk) }}"
    size: "{{ vm_to_clone.disk_size  | default(pvmt_default_disk_size) }}"
    state: resized
  when:
    - vm_to_clone.state | default('present') == 'present'
    - (pvmt_default_disk_size is defined or vm_to_clone.disk_size is defined)

# Update VM network settings using proxmox_nic
- name: Update VM network settings
  community.general.proxmox_nic:
    api_user: "{{ proxmox_api_token_id.split('!')[0] }}"
    api_token_id: "{{ proxmox_api_token_id.split('!')[1] }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    api_host: "{{ proxmox_api_host }}"
    vmid: "{{ clone_results.vmid }}"
    interface: "net0"
    bridge: "{{ vm_to_clone.bridge | default('vmbr0') }}"
    tag: "{{ vm_to_clone.vm_network_vlan | default(pvmt_default_vm_network_vlan, true) }}"
    firewall: "1"
    state: present
  when:
  - vm_to_clone.state | default('present') == 'present'
  - (pvmt_default_vm_network_vlan | default(0) | int > 0) or (vm_to_clone.vm_network_vlan | default(0) | int > 0)
