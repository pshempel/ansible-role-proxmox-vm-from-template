---
- name: Configure network settings and modify storage and memory for deployed VMs
  community.general.proxmox_kvm:
    api_user: "{{ proxmox_api_token_id.split('!')[0] }}"
    api_token_id: "{{ proxmox_api_token_id.split('!')[1] }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    api_host: "{{ proxmox_api_host }}"
    node: "{{ target_node }}"
    vmid: "{{ clone_results.vmid }}"
    memory: "{{ vm_to_clone.memory | default(default_memory_size) }}"
    cores: "{{ vm_to_clone.cores | default(default_cpu_cores) }}"
    sockets: "{{ vm_to_clone.sockets | default(default_cpu_sockets) }}"
    onboot: "{{ vm_to_clone.boot_on_start | default(default_boot_on_start) }}"
#    net: >-
#      net0=model=virtio,bridge={{ vm_to_clone.bridge | default(default_bridge) }},
#      {% if vm_to_clone.vm_network_vlan | default(vm_network_vlan) != 'none' %}tag={{ vm_to_clone.vm_network_vlan | default(vm_network_vlan) | string }},{% endif %}
#      firewall=1
#      {% if item.ipv4 | default(default_ipv4) != 'none' %},ip={{ item.ipv4 | default(default_ipv4) | string }}{% endif %}
#      {% if item.ipv6 | default(default_ipv6) != 'none' %},ip6={{ item.ipv6 | default(default_ipv6) | string }}{% endif %}
    net: >-
          {%- set vlan_tag = vm_to_clone.vm_network_vlan | default(vm_network_vlan) | string -%}
          {%- set bridge = vm_to_clone.bridge | default(default_bridge) -%}
          {%- set net_format = 'model=virtio,bridge=' + bridge -%}
          {%- if vlan_tag != 'none' -%}
          {%- set net_format = net_format + ',tag=' + vlan_tag -%}
          {%- endif -%}
          net0={{ net_format }},firewall=1
    update: true
  when: vm_to_clone.state | default('present') == 'present'

- name: Resize VM disk
  community.general.proxmox_disk:
    api_user: "{{ proxmox_api_token_id.split('!')[0] }}"
    api_token_id: "{{ proxmox_api_token_id.split('!')[1] }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    api_host: "{{ proxmox_api_host }}"
    vmid: "{{ clone_results.vmid }}"
    storage: "{{ vm_to_clone.disk_storage | default('iscsi0') }}"
    # disk: "scsi0"
    disk: "{{ vm_to_clone.disk | default(default_disk) }}"
    # size: "{{ vm_to_clone.disk_size | regex_replace('G', '') }}"
    size: "{{ vm_to_clone.disk_size }}"
    state: resized
  when: vm_to_clone.state | default('present') == 'present' and vm_to_clone.disk_size is defined
