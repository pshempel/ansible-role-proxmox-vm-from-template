- name: Debug selected_template_vmid
  ansible.builtin.debug:
    msg: "Cloning from template VMID: {{ selected_template_vmid }}"

- name: Debug vm_to_clone variable at start of clone task
  ansible.builtin.debug:
    var: vm_to_clone

- name: Debug new VMID and Name
  ansible.builtin.debug:
    msg: > 
     "Creating from cloned VMID {{ selected_template_vmid }} with new vm with ID {{ vm_to_clone.vmid 
     | default('Automatically assigned by Proxmox') }} and name {{ vm_to_clone.name }}.{{ vm_to_clone.domain_name 
     | default(pvmt_default_domain_name) }} 
      on node {{ vm_target_node }} on storage {{ best_storage.storage }} and pool {{ vm_to_clone.pool 
     | default(pvmt_default_proxmox_pool | default(omit)) }} "

- name: Clone VM from template if it does not exist
  community.general.proxmox_kvm:
    api_user: "{{ proxmox_api_token_id.split('!')[0] }}"
    api_token_id: "{{ proxmox_api_token_id.split('!')[1] }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    api_host: "{{ proxmox_api_host }}"
    node: "{{ vm_to_clone.node | default(vm_target_node) }}"
    vmid: "{{ selected_template_vmid }}"
    newid: "{{ vm_to_clone.vmid | default(omit) }}"
    name: "{{ vm_to_clone.name }}.{{ vm_to_clone.domain_name | default(pvmt_default_domain_name) }}"
    clone: yes
    pool: "{{ vm_to_clone.pool | default(pvmt_default_proxmox_pool | default(omit)) }}"
    full: yes
    storage: "{{ best_storage.storage }}"
# This is for the cloud init section, will be completed after fixing other issues
#    cicustom: >-
#      {{ 
#        ('vendor=' + proxmox_cloud_init_storage_path + vm_to_clone.vmid + '.yaml' 
#        if custom_cloud_init_behavior == 'append' 
#        else proxmox_cloud_init_storage_path + vm_to_clone.vmid + '.yaml') 
#        if include_custom_cloud_init == 'yes' 
#        else omit 
#      }}
    timeout: "{{ pvmt_default_proxmox_api_timeout | default('360') }}"  # Extended timeout to accommodate longer clone operations
    
  register: clone_results
  when: 
    - not vmname_exists[vm_data_to_clone.name] | default(false)
    - not vmid_exists[vm_data_to_clone.name] | default(false)

# Add a debug task to print clone operation result or UPID
- name: Debug clone operation result
  ansible.builtin.debug:
    var: clone_results
  