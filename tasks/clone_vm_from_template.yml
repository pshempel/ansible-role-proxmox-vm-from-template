- name: Debug selected_template_vmid
  debug:
    msg: "Cloning from template VMID: {{ selected_template_vmid }}"

- name: Debug vm_to_clone variable at start of clone task
  debug:
    var: vm_to_clone

- name: Debug new VMID and Name
  debug:
    msg: "Creating cloned VMID {{ selected_template_vmid }} with new ID {{ vm_to_clone.vmid 
     | default('Automatically assigned by Proxmox') }} and name {{ vm_to_clone.name }}.{{ default_domain_name }} on node {{ target_node }} on storage {{ best_storage.storage }} and pool {{ vm_to_clone.pool 
     | default(default_pool | default(omit)) }}"

- name: Clone VM from template if it does not exist
  community.general.proxmox_kvm:
    api_user: "{{ proxmox_api_token_id.split('!')[0] }}"
    api_token_id: "{{ proxmox_api_token_id.split('!')[1] }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    api_host: "{{ proxmox_api_host }}"
    node: "{{ target_node }}"
    vmid: "{{ selected_template_vmid }}"
    newid: "{{ vm_to_clone.vmid | default(omit) }}"
    name: "{{ vm_to_clone.name }}.{{ default_domain_name }}"
    clone: yes
    pool: "{{ vm_to_clone.pool | default(default_pool | default(omit)) }}"
    full: yes
    storage: "{{ best_storage.storage }}"
    timeout: 260  # Extended timeout to accommodate longer clone operations
  register: clone_results
  when: 
    - not vm_to_clone.vmid_exists
    - not vm_to_clone.vm_name_exists

# Optional: Add a debug task to print clone operation result or UPID
- name: Debug clone operation result
  debug:
    var: clone_results
  